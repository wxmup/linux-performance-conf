# 控制内核回收用于缓存目录和 inode 对象（VFS 缓存）的倾向。
# 值越低，内核越不愿意回收缓存（默认值是100，过低可能导致内存不足）。
vm.vfs_cache_pressure=50

# 当脏数据达到 1GB 时，进程会主动将脏数据写入磁盘。
vm.dirty_bytes = 1073741824

# 当脏数据达到 512MB 时，内核后台线程会开始将脏数据写入磁盘。
vm.dirty_background_bytes = 536870912

# 内核后台线程每 15 秒唤醒一次，将旧数据写入磁盘（单位是 1/100 秒，默认是 500，即5秒）。
vm.dirty_writeback_centisecs = 1500

# 禁用 NMI watchdog，减少启动和关机时间，提高性能并降低功耗。
kernel.nmi_watchdog = 0

# 允许普通用户运行非特权的容器（如 Docker、LXC）。
kernel.unprivileged_userns_clone = 1

# 限制内核消息输出到控制台，仅显示错误和警告。
kernel.printk = 3 3 3 3

# 限制 /proc 文件系统中内核指针的访问，提升系统安全性。
kernel.kptr_restrict = 2

# 禁用 kexec，防止替换当前正在运行的内核，提升安全性。
kernel.kexec_load_disabled = 1

# 增加系统允许的最大并发连接数，默认值是 4096。
net.core.somaxconn = 8192

# 启用 TCP Fast Open，减少连接延迟，值为 3 允许对入站和出站连接启用。
net.ipv4.tcp_fastopen = 3

# 启用 BBR 拥塞控制算法，提高带宽利用率并降低延迟。
net.ipv4.tcp_congestion_control = bbr

# 默认启用 ECN（Explicit Congestion Notification）协商，减少网络拥塞。
net.ipv4.tcp_ecn = 1

# 增加网络设备接收队列的大小，减少数据包丢失。
net.core.netdev_max_backlog = 16384

# 禁用 TCP 连接空闲后进入慢启动状态，保持连接性能。
net.ipv4.tcp_slow_start_after_idle = 0

# 增加 XFS 文件系统写回操作的时间间隔，减少磁盘写入频率。
fs.xfs.xfssyncd_centisecs = 10000

# 设置系统接收缓冲区的默认大小（1MB）。
net.core.rmem_default = 1048576

# 设置系统接收缓冲区的最大大小（16MB）。
net.core.rmem_max = 16777216

# 设置系统发送缓冲区的默认大小（1MB）。
net.core.wmem_default = 1048576

# 设置系统发送缓冲区的最大大小（16MB）。
net.core.wmem_max = 16777216

# 设置套接字选项的最大内存大小（64KB）。
net.core.optmem_max = 65536

# 设置 TCP 接收缓冲区的最小、默认和最大大小。
net.ipv4.tcp_rmem = 4096 1048576 2097152

# 设置 TCP 发送缓冲区的最小、默认和最大大小。
net.ipv4.tcp_wmem = 4096 65536 16777216

# 设置 UDP 接收缓冲区的最小大小（8KB）。
net.ipv4.udp_rmem_min = 8192

# 设置 UDP 发送缓冲区的最小大小（8KB）。
net.ipv4.udp_wmem_min = 8192

# 启用 MTU 探测，自动调整最优 MTU 值，减少数据包碎片。
net.ipv4.tcp_mtu_probing = 1

# 设置默认队列调度算法为 CAKE，优化队列管理和延迟控制。
net.core.default_qdisc = cake

# 禁用核心转储，防止生成核心转储文件，提高安全性。
kernel.core_pattern=|/bin/false

